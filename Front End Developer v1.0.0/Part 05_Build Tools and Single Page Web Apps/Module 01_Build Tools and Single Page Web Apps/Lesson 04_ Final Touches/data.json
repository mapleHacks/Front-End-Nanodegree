{
  "data": {
    "lesson": {
      "id": 916641,
      "key": "1cfa87cb-377a-4746-a32a-64853dd2624b",
      "title": " Final Touches",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "Add some final pieces to your Webpack project, get your full functionality back, and learn about Service Workers.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/1cfa87cb-377a-4746-a32a-64853dd2624b/916641/1565986748513/+Final+Touches+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/1cfa87cb-377a-4746-a32a-64853dd2624b/916641/1565986745534/+Final+Touches+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 916636,
          "key": "64d5f23c-f05d-43df-9e25-c96c72a822cb",
          "title": "Broken Project",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "64d5f23c-f05d-43df-9e25-c96c72a822cb",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 916620,
              "key": "ca16e8d1-c082-4d5f-80b3-5b98ea0c7901",
              "title": "Heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "As we have gone along setting up this project, we have let all functionality slide. We just got our styles to show up again, but now, what about our click events? What if we wanted to make an API call or add pages to this app? \n\nThis will hopefully be a short and sweet lesson where we solve those entirely practical issues, so that I can get out of your way and let you build stuff. ",
              "instructor_notes": ""
            },
            {
              "id": 916606,
              "key": "a113360b-3c9f-4313-9e54-c92adc380023",
              "title": "FEND C04 L4 A01 Broken Project",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "XyxDwaac2t8",
                "china_cdn_id": "XyxDwaac2t8.mp4"
              }
            },
            {
              "id": 916607,
              "key": "01df14e5-3928-4bf3-9f23-d49ddf56d33a",
              "title": "Optional Activity",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "If you haven't run into IIFE's yet, this is a great time to become familiar with them. Go to the mozilla developer docs [here](https://developer.mozilla.org/en-US/docs/Glossary/IIFE) and see if you can answer the following questions. If you think you have a handle on IIFEs, try answering the questions first and then go back to the docs to fill in any gaps. Also, the mozilla developer docs are an amazing resource for many many front end concepts, so you might want to bookmark it for future reading if you haven't already.",
              "instructor_notes": ""
            },
            {
              "id": 916604,
              "key": "e000ebf1-61c5-4e88-86e4-084c24a32c4d",
              "title": "IIFE Quiz",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "e000ebf1-61c5-4e88-86e4-084c24a32c4d",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What does IIFE stand for?",
                "matchers": [
                  {
                    "expression": "\\w*Immediately Invoked Function Expression"
                  }
                ]
              }
            },
            {
              "id": 916610,
              "key": "8556f6ce-dbb6-49f7-823d-951c4a4429a1",
              "title": "IIFE Quiz",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "8556f6ce-dbb6-49f7-823d-951c4a4429a1",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What are some benefits of using IIFEs?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "They keep variables out of the global scope",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "They will import all necessary code from other files at run time",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "They run directly after being defined, so you don’t have to name them",
                    "is_correct": true
                  },
                  {
                    "id": "rbk4",
                    "text": "When you use them, you don't have to worry about variables you write overlapping with variables from third party code",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 916624,
              "key": "2a326d17-677d-4622-81df-10415a053d29",
              "title": "IIFE Quiz",
              "semantic_type": "ReflectAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "2a326d17-677d-4622-81df-10415a053d29",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "title": "Interview Question",
                "semantic_type": "TextQuestion",
                "evaluation_id": null,
                "text": "What is wrong with this IIFE?\n```\nfunction foo() {\n...javascript\n}();\n```\n"
              },
              "answer": {
                "text": "Potentially there are other answers, but the big one that you shouldn’t miss, is that this is an invalid IIFE because it is a named function. If I were asked this in an interview, I wouldn’t stop at saying why it is an invalid IIFE - a question like this is an opportunity to tell the interviewer everything you know about the topic. It isn’t going to far to talk about a time that you used them, or a lightbulb moment you had while learning about it. ",
                "video": null
              }
            }
          ]
        },
        {
          "id": 916640,
          "key": "20f4d350-c665-4314-bfd9-cf22781c9870",
          "title": "Fixing Our Functionality",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "20f4d350-c665-4314-bfd9-cf22781c9870",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 916605,
              "key": "5c07ff5c-5292-4f9f-b424-97880b41d615",
              "title": "FEND C04 L4 A02 Fixing Functionality",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "UAbNwATXNy0",
                "china_cdn_id": "UAbNwATXNy0.mp4"
              }
            },
            {
              "id": 916603,
              "key": "e8919355-099d-4041-ba1a-6a385157d4fa",
              "title": "Interview Question",
              "semantic_type": "ReflectAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "e8919355-099d-4041-ba1a-6a385157d4fa",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "title": "Interview Question",
                "semantic_type": "TextQuestion",
                "evaluation_id": null,
                "text": "Explain scope in javascript. It might be easier if you choose an example to walk through."
              },
              "answer": {
                "text": "This question is likely to come up in some form or another in a javascript interview. Even if they never ask about scope directly, they will most likely ask a question that revolves around your knowledge of scope. But it is a frustratingly abstract and difficult concept to answer point blank. The simplest answer is to say that scope is where a variable can be seen. But you need to go into better detail than that, so most people choose an allegory or code examples. No one expects your answer to be perfect, so just try your best to get the point across. This is also a great interview question to show off your communication skills. A big part of being a developer is being able to clearly explain complex and technical topics, especially to non-technical people. ",
                "video": null
              }
            }
          ]
        },
        {
          "id": 922019,
          "key": "59c3c1d9-4b97-4b37-acdd-f6f055bc5846",
          "title": "Exercise: Fixing Functionality",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "59c3c1d9-4b97-4b37-acdd-f6f055bc5846",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 922011,
              "key": "57ef5d39-d973-4824-8ce8-77998600cb2f",
              "title": "Exercise: Fixing Functionality Heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Exercise: Fixing Functionality\n\nIf you are using the classroom workspace, you *do not* need to use the tasklist below - it’s here to help those working on their local machines. The same instructions are included in the workspace, so you should click “Expand” on the bottom left to be able to use your full screen.",
              "instructor_notes": ""
            },
            {
              "id": 922015,
              "key": "a56df18e-1fa0-4bcd-8c65-ba949ddc2b96",
              "title": "Exercise: Fixing Functionality Tasklist",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "a56df18e-1fa0-4bcd-8c65-ba949ddc2b96",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Update the webpack config output to include libraryTarget and library\n```\noutput: {\n    libraryTarget: 'var',\n    library: 'Client'\n},\n```",
                "Update your Javascript to use the Client package created by webpack",
                "Change which port your express server is running on",
                "Make sure all functionality on the page works as expected",
                "Commit your changes!"
              ],
              "positive_feedback": "Great job, your app has all its basic functionality now!",
              "video_feedback": null,
              "description": "In your repo:"
            },
            {
              "id": 922021,
              "key": "1ee9fd17-1d11-482b-ae8a-bb45e0450c17",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "r179038c921870xJUPYTERLydnrbsxh",
              "pool_id": "jupyterlab",
              "view_id": "jupyter-lab-318co",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "port": "3000",
                    "ports": [],
                    "pageEnd": "",
                    "pageStart": "",
                    "allowSubmit": false,
                    "defaultPath": "/",
                    "actionButtonText": ""
                  },
                  "kind": "jupyter-lab"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 922016,
          "key": "497560ac-d577-4641-819f-058e27d10e61",
          "title": "Exercise: API Call Challenge",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "497560ac-d577-4641-819f-058e27d10e61",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 922010,
              "key": "5f11a59c-3e52-4ad1-ac5a-5999bbc289f6",
              "title": "Exercise: API Call Challenge Heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Exercise: API Call Challenge\n\nIf you are using the classroom workspace, you *do not* need to use the tasklist below - it’s here to help those working on their local machines. The same instructions are included in the workspace, so you should click “Expand” on the bottom left to be able to use your full screen.",
              "instructor_notes": ""
            },
            {
              "id": 922012,
              "key": "07bfbe4a-7630-4f19-87a0-bca813904176",
              "title": "Exercise: API Call Challenge Tasklist",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "07bfbe4a-7630-4f19-87a0-bca813904176",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Create a new git branch for this activity",
                "Create a javascript fetch request to an external API (you can use the same API that you used in the previous course if you already have credentials)",
                "Make the fetch request run after an event on your webpage (form submit is an easy one, but you can do something else if you’d like)",
                "Make the response show up on your webpage. This will require some vanilla javascript DOM manipulation, you can see examples of this in formHandler.js",
                "See if you can run the app, trigger the event, and see the result from your API call!",
                "Commit and push your code!"
              ],
              "positive_feedback": "Way to go! This is a huge step towards being able to work with external APIs.",
              "video_feedback": null,
              "description": "Implement a fetch request to an external API and get the response to show up in the view of your app. Try to get all of this working on your own, but in case you get stuck, the feedback will have some code hints. Remember that the file `client/js/formHandler.js` has an example fetch request you can use as a template. "
            },
            {
              "id": 922022,
              "key": "abe4d9dd-7be7-4ef1-a419-ff8a16d94683",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "r179038c921871xJUPYTERL8ol2z8ba",
              "pool_id": "jupyterlab",
              "view_id": "jupyter-lab-n9196",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "port": "3000",
                    "ports": [],
                    "pageEnd": "",
                    "pageStart": "",
                    "allowSubmit": false,
                    "defaultPath": "/",
                    "actionButtonText": ""
                  },
                  "kind": "jupyter-lab"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 916638,
          "key": "161185d3-812b-4950-b990-f4de56702181",
          "title": "Webpack for Production",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "161185d3-812b-4950-b990-f4de56702181",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 916608,
              "key": "a6569f5c-411c-4278-b93a-9c8895807783",
              "title": "Production Goals",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Now we have a usable and fairly well set up development environment for webpack with express. But though our development environment has gotten a lot of attention lately, we haven’t done much with our production config. So we’ll give it some love in this section. Thankfully, just by setting mode as “production” webpack knows to do some optimizations. For instance, have you noticed that the main.js file is not minified in development, but is minified for production? That’s webpack automatically knowing what we want, just because we specified the mode.\n\nWhen we bundle assets for production, I like to think of it like your app is going on a camping trip and you have to pack the bag. Everything your app needs to run has to be there, but you have to make it as small and light as possible, or else your app won’t do very well on its trip. ",
              "instructor_notes": ""
            },
            {
              "id": 916633,
              "key": "5d41c6e9-e447-40f6-ac99-39a999dfbba8",
              "title": "FEND C04 L4 A03 Webpack For Production",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "La7iR5d9Vb8",
                "china_cdn_id": "La7iR5d9Vb8.mp4"
              }
            },
            {
              "id": 916617,
              "key": "5bc550a5-96f8-4fe8-9568-ce04c2f7d836",
              "title": "Quiz",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "5bc550a5-96f8-4fe8-9568-ce04c2f7d836",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What are the two biggest factors contributing to slow and bloated websites?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "High res images and gifs",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "Javascript",
                    "is_correct": true
                  },
                  {
                    "id": "rbk3",
                    "text": "Having too many webpages in the architecture",
                    "is_correct": false
                  },
                  {
                    "id": "rbk4",
                    "text": "Styles",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 916613,
              "key": "336d35e7-e89b-4698-9884-32d1b6efbb97",
              "title": "Quiz",
              "semantic_type": "ReflectAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "336d35e7-e89b-4698-9884-32d1b6efbb97",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "title": "Reflect",
                "semantic_type": "TextQuestion",
                "evaluation_id": null,
                "text": "With your minified css file, go check the overall page size in your browser again. How much smaller is your webpage? The results won't be drastic here, because our styles are quite short, but whatever percentage of space you saved, apply that mentally to 5MB of styles. Then you really start to see some page speed results!"
              },
              "answer": {
                "text": "Thanks! ",
                "video": null
              }
            },
            {
              "id": 916609,
              "key": "d7938616-e025-475f-86af-82c6bbef166e",
              "title": "Interview Question",
              "semantic_type": "ReflectAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "d7938616-e025-475f-86af-82c6bbef166e",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "title": "Interview Question",
                "semantic_type": "TextQuestion",
                "evaluation_id": null,
                "text": "What is the purpose of a .map file?"
              },
              "answer": {
                "text": "Map files keep track of which source files the code in your bundled file comes from. This is incredibbly handy when debugging. Without a map file, you would get an error that says it is coming from like 1783 of bundle.js - which isn’t very helpful, but with a source map turned on it would tell you the file name and line where the error is occuring. Much better!",
                "video": null
              }
            },
            {
              "id": 916611,
              "key": "218ebc51-f065-4079-aa13-9db0a76eb951",
              "title": "A Little Bit Extra",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### A real life example\n\nJust as a bit of extra for how knowing all of this about production builds can be useful, take this example. Imagine you just took on a new client, and want to give them a report of their current site before starting on any development work (that is a great thing to do for all your clients, by the way). Minimizing assets can be an easy win. You might be able to bump a client's page speed considerably, just by minimizing their stylesheets, if they aren't being minimized already. You can also check if styles are being loaded that are never used on the page. ",
              "instructor_notes": ""
            },
            {
              "id": 916634,
              "key": "9844ae50-d8d6-4557-9718-a890e52da307",
              "title": "Webpack for Production Conclusion",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Webpack allows us to do some really powerful optimizations for production, and we have only scratched the surface here, but we have done probably the most important tasks. If you want to delve more into production optimizations, webpack has its [own documentation](https://webpack.js.org/guides/production/) for this and reading plugin documentation like Terser’s will have lots of ways to help you.",
              "instructor_notes": ""
            },
            {
              "id": 916630,
              "key": "399164ea-6e72-46bf-bfee-565e60d47313",
              "title": "Webpack for Production Optional",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "If you feel comfortable with webpack and what we've done so far, you might have noticed that our webpack config files don't exactly follow the DRY principle. There is definitely going to be some overlap between our prod and dev configs. Webpack recognizes this and has actually created a webpack merge plugin that allows you to create a webpack config file that is generic across all your configs, that can be merged with another config to contain exactly the settings you need. Create a new branch on your repo, then see if you can get it working. ",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 922018,
          "key": "785e21a4-a72c-46c7-90cd-c41553fbd476",
          "title": "Exercise: Dev Tools Challenge",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "785e21a4-a72c-46c7-90cd-c41553fbd476",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 922013,
              "key": "b64b86e4-13da-48b7-a8af-11ef37297add",
              "title": "Exercise: Dev Tools Challenge Heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Exercise: Dev Tools Challenge\n\nIf you are using the classroom workspace, you *do not* need to use the tasklist below - it’s here to help those working on their local machines. The same instructions are included in the workspace, so you should click “Expand” on the bottom left to be able to use your full screen.",
              "instructor_notes": ""
            },
            {
              "id": 922009,
              "key": "ed7e23c2-a664-4ded-9746-c617c141e154",
              "title": "Exercise: Dev Tools Challenge Tasklist",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "ed7e23c2-a664-4ded-9746-c617c141e154",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Using the developer tools of whatever browser you are using, look up how to see the total web page size",
                "Build prod and note the size of the page",
                "Install the Minimize CSS plugin and terser plugin",
                "Run webpack in prod mode",
                "Note the size of the page with minified CSS"
              ],
              "positive_feedback": "Don’t expect to see a huge difference right now, because we don’t have very many styles! The fewer styles you have the less benefit that will come from compressing them, but on big stylesheets this difference gets to be very important.",
              "video_feedback": null,
              "description": "This is a dev tools challenge. "
            },
            {
              "id": 922023,
              "key": "420305ca-5a51-4c0e-9ce3-ed749382abbb",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "r179038c921872xJUPYTERL3yulj125",
              "pool_id": "jupyterlab",
              "view_id": "jupyter-lab-byzd8",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "port": "3000",
                    "ports": [],
                    "pageEnd": "",
                    "pageStart": "",
                    "allowSubmit": false,
                    "defaultPath": "/",
                    "actionButtonText": ""
                  },
                  "kind": "jupyter-lab"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 916635,
          "key": "dda219fc-dc2d-4238-9501-2142f3dca765",
          "title": "What are Service Workers",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "dda219fc-dc2d-4238-9501-2142f3dca765",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 916626,
              "key": "15198971-f428-4729-9d32-2f8fd9a7c1f9",
              "title": "FEND C04 L4 A04 What Are Service Workers",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Y2UxD8WV8ww",
                "china_cdn_id": "Y2UxD8WV8ww.mp4"
              }
            },
            {
              "id": 916615,
              "key": "51cfba82-78ea-47cd-8814-f492bec584de",
              "title": "What are Service Workers?",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Google Workbox makes working with basic Service Workers incredibly convenient. We are going to follow their setup instructions, the steps are going to feel very familiar by now, because Google Workbox created a webpack plugin for us.\n\nSo, we do our three steps:\n\n- Install the plugin:\n```npm install workbox-webpack-plugin --save-dev```\n- Require the plugin in prod:\n```const WorkboxPlugin = require('workbox-webpack-plugin');```\n- Add the plugin:\n```new WorkboxPlugin.GenerateSW()```\n\nWe are going to add service workers to prod, because to allow offline access, what the service workers actually do is create a cached version of your website that they can supply if the server can’t be reached. But we don’t want that caching around our dev site, so we won’t add this to our dev config at all.\n\nLike we’ve learned with most plugins, when we call the generate service workers function, we have the ability to pass in some options. There are lots of cool options you can choose from, to do things like cache images at runtime, limit the max size of your cache, etc. For now, we are going to stick with the default settings. \n\nIf you follow along with the documentation, there’s one more step. We need to register a Service Worker with our app. To do this, we will add a script to our html file and call the register service worker function if the browser supports service workers. \n\nAdd this code to the bottom of your html file, just above the closing body tag.\n\n```\n<script>\n    // Check that service workers are supported\n    if ('serviceWorker' in navigator) {\n        // Use the window load event to keep the page load performant\n        window.addEventListener('load', () => {\n            navigator.serviceWorker.register('/service-worker.js');\n        });\n    }\n</script>\n```",
              "instructor_notes": ""
            },
            {
              "id": 916625,
              "key": "5f76bfd8-ff0c-4f72-b31a-323393cf2e88",
              "title": "What are Service Workers Quiz",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "5f76bfd8-ff0c-4f72-b31a-323393cf2e88",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "A service worker is a json file that keeps a cached copy of your DOM ",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "True",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "False",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 916622,
              "key": "f23e0df0-85f8-4eb7-af5c-a033e7fb33fc",
              "title": "What are Service Workers Quiz",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "f23e0df0-85f8-4eb7-af5c-a033e7fb33fc",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Service Workers do all the following except:",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Allow websites to use push notifications like phones",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "Allow websites to have icons like phone apps",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Allow websites to offer offline interactions like phone apps",
                    "is_correct": false
                  },
                  {
                    "id": "rbk4",
                    "text": "Allow websites to be available through app stores like phone apps",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 916612,
              "key": "8f0d3e01-c317-41f8-85d4-df8b6f431693",
              "title": "Further Research",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "In case this idea of PWA's really caught your interest, I would go to the [Google Workbox PWA tutorial](https://codelabs.developers.google.com/codelabs/workbox-lab/#0). \nYour knowledge of webpack and service workers will put you in a good place to get started.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 922020,
          "key": "7ce68045-76f3-4967-9193-b508688b3d92",
          "title": "Exercise: Service Workers",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "7ce68045-76f3-4967-9193-b508688b3d92",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 922017,
              "key": "3b31f0bc-bf80-4f4c-9db2-7266ae7566c6",
              "title": "Exercise: Service Workers Heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Exercise: Service Workers\n\nIf you are using the classroom workspace, you *do not* need to use the tasklist below - it’s here to help those working on their local machines. The same instructions are included in the workspace, so you should click “Expand” on the bottom left to be able to use your full screen.",
              "instructor_notes": ""
            },
            {
              "id": 922014,
              "key": "1fbbdd60-8ae9-4000-9127-275725ed66b8",
              "title": "Exercise: Service Workers Tasklist",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "1fbbdd60-8ae9-4000-9127-275725ed66b8",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Create a new branch called “adding service workers”",
                "Install the workbox plugin",
                "Run your server, refresh the page a few times",
                "Turn off the server in your terminal",
                "Go back to your web page and refresh",
                "You’ve been successful if you still see your webpage!",
                "Merge the branch back to master"
              ],
              "positive_feedback": "Great job! You’ve added Service Workers and gotten more practice with git branching and merging!",
              "video_feedback": null,
              "description": "In your repo:"
            },
            {
              "id": 922024,
              "key": "dc5ff2da-5166-4ad8-8c99-8f9cc0e759c0",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "r179038c921873xJUPYTERL8w8w8mtd",
              "pool_id": "jupyterlab",
              "view_id": "jupyter-lab-chq5m",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "port": "3000",
                    "ports": [],
                    "pageEnd": "",
                    "pageStart": "",
                    "allowSubmit": false,
                    "defaultPath": "/",
                    "actionButtonText": ""
                  },
                  "kind": "jupyter-lab"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 916637,
          "key": "0cf34553-4f05-41a5-afec-06568cd116b7",
          "title": "Course 4 Conclusion",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "0cf34553-4f05-41a5-afec-06568cd116b7",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 916619,
              "key": "21f244dd-f8e1-4e43-85de-117ce08b4f98",
              "title": "FEND C04 L4 A06 Course Conclusion",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "IJGTOQ3wP78",
                "china_cdn_id": "IJGTOQ3wP78.mp4"
              }
            },
            {
              "id": 916627,
              "key": "9d4b0f68-695e-431f-8451-5c6eab00ff14",
              "title": "Further Research",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "If you want some more advanced webpack topics to research next, might I suggest these:\n- [Code splitting/lazy loading](https://webpack.js.org/guides/code-splitting/) (spoiler - they're the same thing in webpack)\n- [Tree shaking or dead code elimination](https://webpack.js.org/guides/tree-shaking/)\n- [A list of plugins and tutorials for more webpack fun](https://github.com/markerikson/react-redux-links/blob/master/webpack-advanced-techniques.md)\n- If you want to hear someone who works for Webpack explain webpack, [here’s a video](https://www.netlify.com/blog/2017/01/03/4-key-concepts-of-webpack/)\n\n### A Couple More Interview Questions",
              "instructor_notes": ""
            },
            {
              "id": 916616,
              "key": "222bf08b-4084-4455-8e79-f7572bfcea0b",
              "title": "FEND C04 L4 Question 1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "w1P3wx7tZ80",
                "china_cdn_id": "w1P3wx7tZ80.mp4"
              }
            },
            {
              "id": 916628,
              "key": "8ea6d1bb-3e2d-495d-b6cb-61d0022d3b06",
              "title": "Interview Question",
              "semantic_type": "ReflectAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "8ea6d1bb-3e2d-495d-b6cb-61d0022d3b06",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "title": "Interview Question",
                "semantic_type": "TextQuestion",
                "evaluation_id": null,
                "text": "What excites or interests you about coding?"
              },
              "answer": {
                "text": "Soft questions are important too! Make sure have some good answers thought up before walking into your interview.",
                "video": null
              }
            },
            {
              "id": 916621,
              "key": "918188a9-d36d-4f37-836a-0258ea7cbd5b",
              "title": "FEND C04 L4 Question 2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "stv1RPJ40fE",
                "china_cdn_id": "stv1RPJ40fE.mp4"
              }
            },
            {
              "id": 916623,
              "key": "89e4249b-9aa1-49e7-9495-1e5c46e18be9",
              "title": "Interview Question",
              "semantic_type": "ReflectAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "89e4249b-9aa1-49e7-9495-1e5c46e18be9",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "title": "Interview Question ",
                "semantic_type": "TextQuestion",
                "evaluation_id": null,
                "text": "What is a recent technical challenge you experienced and how did you solve it?"
              },
              "answer": {
                "text": "This is a common kind of question, the goal here is to show that you code actively and that have learned things recently. It’s also a great opportunity to show familiarity with the company’s stack, if possible.",
                "video": null
              }
            },
            {
              "id": 917465,
              "key": "0e0438f7-3628-45b8-90f3-e68a8ead1fac",
              "title": "Course 4 Conclusion Heading",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Congratulations! We are at the end of course 4. Perhaps it’s been a whirlwind of new things for you, or maybe you already knew a good portion of what we covered, but either way, I hope that this course has helped you on your way to making awesome apps with webpack and all the doors it opens. Remember that the repository you forked (or your workspace) and all the github materials will continue to be there for you as a resource whenever you want to set up another project. Best of luck and happy coding! ",
              "instructor_notes": ""
            }
          ]
        }
      ]
    }
  }
}